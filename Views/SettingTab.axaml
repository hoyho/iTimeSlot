<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:iTimeSlot.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="vm:MainWindowViewModel"
             x:Class="iTimeSlot.Views.SettingTab">
             
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    
    <DockPanel>
        <StackPanel Margin="0">
            <Label FontSize="14" FontWeight="Bold" VerticalAlignment="Center">Existing slot:</Label>
            <ScrollViewer>
              <ListBox x:Name="AllSlotsLb" MaxHeight="125" BorderBrush="Gainsboro" BorderThickness="1"
                     ItemsSource="{Binding AllTimeSlots}"
                     SelectedIndex="{Binding IndexOfSelectedTimeInSetting}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
            
                            <TextBlock Grid.Column="0" Text="{Binding }" 
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Stretch"/>

                            <Button  Grid.Column="1"
                                     IsVisible="{Binding !IsSystemPreserved}" 
                                     Command="{Binding $parent[ListBox].((vm:MainWindowViewModel)DataContext).DeleteTimeSpan}"
                                     CommandParameter="{Binding}" 
                                     Padding="1 0"
                                     VerticalAlignment="Center"
                                     Background="Transparent"
                                     Foreground="Red">
                                <Button.Content>
                                    <Image Width="16" Height="16" Source="avares://iTimeSlot/Assets/delete.png">
                                    </Image>
                                </Button.Content>
                                <!-- <Button.Flyout > -->
                                <!--     <Flyout ShowMode="TransientWithDismissOnPointerMoveAway">This timeslot is being used!</Flyout> -->
                                <!-- </Button.Flyout> -->
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            </ScrollViewer>


            <Label Target="ToAddNud" FontSize="14" 
                   FontWeight="Bold" VerticalAlignment="Center">Add minute(s) to slot:</Label>
            <StackPanel Orientation="Horizontal" Height="38" >
                <NumericUpDown Name="ToAddNud" ButtonSpinnerLocation="Left" Minimum="1" Maximum="60" Increment="1"
                               Watermark="Edit Me"
                               Value="{Binding TimeToAdd}"
                               />
                <Button x:Name="AddTimeBtn"
                        Command="{Binding AddTimeSpan}"
                        CommandParameter="{Binding TimeToAdd}" >Ok</Button>
            </StackPanel>

            <TextBlock Margin="0 5" > </TextBlock>
            <TextBlock Margin="0 5" >Behavior:</TextBlock>
            <StackPanel   >
                <CheckBox IsChecked="{Binding CloseWithoutExit}"
                          Command="{Binding SyncSettings}"
                          >Close without exit</CheckBox>
                <CheckBox IsChecked="{Binding PlaySound}"
                          Command="{Binding SyncSettings}"
                          >Play sound when timer done</CheckBox>
            </StackPanel>

        </StackPanel>
    </DockPanel>
</UserControl>
